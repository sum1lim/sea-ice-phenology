#!/usr/bin/env python3
import argparse
import csv
import pandas as pd
import numpy as np
from sea_ice_phenology.utils import interQuantileMask


def main(args):
    df = pd.read_csv(args.input, thousands=",")

    phenology_df = None
    for phenology in df.columns:
        if phenology.endswith("phenology") == False:
            continue
        for k in ["MO", "PO", "PD", "OW", "FO"]:
            trend = df.drop(df[df[phenology] != k].index).copy()
            col_title = f"{phenology.split('_phenology')[0]}_{k}"
            trend.index = pd.DatetimeIndex(trend["system:time_start"]).year
            trend[col_title] = pd.to_datetime(
                trend["system:time_start"], errors="coerce"
            ).dt.dayofyear
            if k in ["PO", "OW"]:
                trend = trend.groupby(trend.index).first()
            else:
                trend = trend.groupby(trend.index).last()

            trend[col_title] = interQuantileMask(
                trend[col_title], low="", high=""
            ).drop(trend[trend[col_title] == ""].index)

            if phenology_df is None:
                phenology_df = pd.DataFrame(trend[col_title])
            else:
                phenology_df = phenology_df.join(trend[col_title])

    print(phenology_df)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "--input",
        type=str,
        help="Path to time-series data file (csv)",
        required=True,
    )

    args = parser.parse_args()

    main(args)
