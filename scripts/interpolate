#!/usr/bin/env python3
import argparse
import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats


def main(args):
    ts_df = pd.read_csv(args.input, thousands=",")
    ts_df["system:time_start"] = pd.to_datetime(ts_df["system:time_start"])
    ts_df.index = ts_df["system:time_start"]
    del ts_df["system:time_start"]

    for band in ts_df.columns:
        first_valid = ts_df[band][ts_df[band].notnull()].index[0]
        last_valid = ts_df[band][ts_df[band].notnull()].index[-1]
        tmp = ts_df.loc[first_valid:last_valid].copy()

        tmp["Date"] = tmp.index
        sns.scatterplot(data=tmp, x="Date", y=band)
        plt.show()

        tmp[band] = tmp[band].interpolate(
            "linear", limit_direction="both", limit_area="inside", limit=1
        )
        tmp[band] = tmp[band].interpolate(
            "spline", order=3, limit_direction="both", limit_area="inside", limit=4
        )
        tmp[band] = tmp[band].interpolate(
            "linear", limit_direction="both", limit_area="inside", limit=1
        )

        Q1 = ts_df[band].quantile(0.25)
        Q3 = ts_df[band].quantile(0.75)
        IQR = Q3 - Q1
        tmp[band].mask(tmp[band] < Q1 - 1.5 * IQR, None, inplace=True)
        tmp[band].mask(tmp[band] > Q3 + 1.5 * IQR, None, inplace=True)

        sns.scatterplot(data=tmp, x="Date", y=band)
        plt.show()

        ts_df[f"{band}_interpolate"] = tmp[band]

    ts_df.to_csv(f"{'.'.join(args.input.split('.')[:-1])}_interpolate.csv")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument(
        "--input",
        type=str,
        help="Path to time-series data file (csv)",
        required=True,
    )

    args = parser.parse_args()

    main(args)
